`   미들웨어 : 요청과 응답의 중간에 위치한 익스프레스의 핵심
`   `   라우터, 에러 핸들러 등도 미들웨어의 일종
`   `   app.use와 함께 사용 [app.use(Mid) 형태]
`   미들웨어의 실행
`   `   app.use(mid) : 모든 요청에서 미들웨어 실행
`   `   app.use('/abc', mid) : abc로 시작하는 요청에서 미들웨어 실행
`   `   app.post('/abc', mid) : abc로 시작하는 POST 요청에서 미들웨어 실행

`   morgan
`   `   요청과 응답에 대한 정보를 콘솔에 기록
`   `   app.use(morgan('dev'));
`   `   `   인수 : dev, combined, common, short, tiny 등
`   `   `   보통 개발환경 - dev, 배포 환경 - combined
`   `   `   `   dev 모드 기준 콘솔 : [HTTP 메소드] [주소] [HTTP 상태 코드] [응답 속도] - [응답 바이트]

`   static
`   `   정적 파일 제공 라우터 역할
`   `   기본 제공 -> 따로 설치 X, express 객체 안에서 꺼내 장착
`   `   app.use('요청 경로', express.static('실제 경로'));
`   `   함수 인수 : 정적 파일들이 담겨있는 폴더 지정
`   `   서버 폴더 경로와 요청 경로가 다름 => 외부인이 서버의 구조를 쉽게 파악 불가 => 보안에 도움
`   `   정적 파일을 알아서 제공 => fs.readFile 등으로 파일을 직접 읽어 전송할 필요 X
`   `   요청 경로에 해당 파일 존재 X => 자동으로 내부적으로 next 호출, 파일 발견 시 다음 미들웨어 실행 X